import React, { useRef, useState } from 'react';
import { FFmpeg } from '@ffmpeg/ffmpeg';

function VideoEditor() {
  const [videoFile, setVideoFile] = useState(null);
  const [previewUrl, setPreviewUrl] = useState('');
  const ffmpegRef = useRef(new FFmpeg());

  const handleFileUpload = async (e) => {
    const file = e.target.files[0];
    setVideoFile(file);
    setPreviewUrl(URL.createObjectURL(file));
  };

  const trimVideo = async (start, end) => {
    const ffmpeg = ffmpegRef.current;
    await ffmpeg.load();
    
    ffmpeg.FS('writeFile', 'input.mp4', await fetchFile(videoFile));
    
    await ffmpeg.run(
      '-ss', start,
      '-to', end,
      '-i', 'input.mp4',
      '-c', 'copy',
      'output.mp4'
    );
    
    const data = ffmpeg.FS('readFile', 'output.mp4');
    setPreviewUrl(URL.createObjectURL(new Blob([data.buffer], { type: 'video/mp4' })));
  };

  return (
    <div>
      <input type="file" accept="video/*" onChange={handleFileUpload} />
      {previewUrl && (
        <div>
          <video controls src={previewUrl} width="600" />
          <button onClick={() => trimVideo(5, 10)}>
            Trim 5-10 seconds
          </button>
        </div>
      )}
    </div>
  );
}